// <auto-generated />
using System;
using ASPIRE.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ASPIRE.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220614111823_change_type")]
    partial class change_type
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ASPIRE.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<byte[]>("ProfilePicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("UserRoleId")
                        .HasColumnType("int");

                    b.Property<int>("UsernameChangeLimit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("ASPIRE.Models.Audit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AffectedColumns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NewValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("ASPIRE.Models.Domain.MasterSetup.AspireUserRole", b =>
                {
                    b.Property<int>("AspireUserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AspireUserRoleId");

                    b.ToTable("AspireUserRole", "master");
                });

            modelBuilder.Entity("ASPIRE.Models.Domain.MasterSetup.District", b =>
                {
                    b.Property<int>("DistrictId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DivisionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DistrictId");

                    b.HasIndex("DivisionId");

                    b.ToTable("District", "master");
                });

            modelBuilder.Entity("ASPIRE.Models.Domain.MasterSetup.Division", b =>
                {
                    b.Property<int>("DivisionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProvienceId")
                        .HasColumnType("int");

                    b.HasKey("DivisionId");

                    b.HasIndex("ProvienceId");

                    b.ToTable("Division", "master");
                });

            modelBuilder.Entity("ASPIRE.Models.Domain.MasterSetup.Provience", b =>
                {
                    b.Property<int>("ProvienceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProvienceId");

                    b.ToTable("Provience", "master");
                });

            modelBuilder.Entity("ASPIRE.Models.Domain.MasterSetup.School", b =>
                {
                    b.Property<int>("SchoolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Activity1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AppNonTeaching")
                        .HasColumnType("int");

                    b.Property<int>("AppTeaching")
                        .HasColumnType("int");

                    b.Property<string>("BEMISCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BoundaryWallCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BoundaryWallStructure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildingCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildingStructure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ChildrenReceivingDistanceLearningKits")
                        .HasColumnType("bit");

                    b.Property<string>("CleaningCycleOfWashBasin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CleaningResponsibility")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClosedReasonInternet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClosedReasonTelephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClusterBemisCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClusterDDOCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClusterFeedingSchoolsMiddle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClusterFeedingSchoolsPrimary")
                        .HasColumnType("int");

                    b.Property<string>("ClusterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPersonName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistanceOfNearestPoll")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DistanceOfNearestWaterSource")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DtmCreatedDate")
                        .HasColumnType("int");

                    b.Property<int>("EightBoys")
                        .HasColumnType("int");

                    b.Property<int>("EightGilrs")
                        .HasColumnType("int");

                    b.Property<string>("ElectricitySource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ElevenBoys")
                        .HasColumnType("int");

                    b.Property<int>("ElevenGirls")
                        .HasColumnType("int");

                    b.Property<int>("FiveBoys")
                        .HasColumnType("int");

                    b.Property<int>("FiveGirls")
                        .HasColumnType("int");

                    b.Property<int>("FourBoys")
                        .HasColumnType("int");

                    b.Property<int>("FourGirls")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAnySDPFormPTSMCLast3Years")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAudioAndVideoEquipment")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBoundaryWall")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBuilding")
                        .HasColumnType("bit");

                    b.Property<bool>("IsChildOfPTSMCMembersAreEnrolled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsComputerLab")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDisableStudentsInSchool")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDrinkingWaterAtSchool")
                        .HasColumnType("bit");

                    b.Property<bool>("IsElectricity")
                        .HasColumnType("bit");

                    b.Property<bool>("IsElectricityInArea")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExaminationHall")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFirstaidKit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFullTimeTeacherForECE")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFunctionStatusInternet")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFunctionStatusScienceLab")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFunctionStatusTelephone")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFunctional")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGasInArea")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGasInSchool")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGovtDrinkingWaterScheme")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHygieneKit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsITLab")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInspectionOfCleaning")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInternetAvailabe")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInternetConnectivity")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLearningKit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLibraryAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMHMKit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMHMKitsAtSchool")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMeetingRecordesAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPTSMC")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPTSMCParticipatedInAnyActivityCurrentYear")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPlayGround")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProperSeverageSystem")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRampforStudentsOrTeachers")
                        .HasColumnType("bit");

                    b.Property<bool>("IsScienceLab")
                        .HasColumnType("bit");

                    b.Property<bool>("IsScienceLabEquipment")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSeprateRoomForECE")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSoapForWashBasin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSolarization")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSpaceForNewRooms")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTeacherUsesAudioAndVideoEquipment")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTeacherUsesTeachingMeterialOnHealth")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTelephoneAvailabe")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTrainingOnFirstAidKit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTrainingOnMHMKits")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTrendExtraCracularActivity")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWashbasinAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWaterFacilityInToilets")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWaterTank")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWaterforWashBasin")
                        .HasColumnType("bit");

                    b.Property<int>("KachaClerkOffice")
                        .HasColumnType("int");

                    b.Property<int>("KachaGuardRoom")
                        .HasColumnType("int");

                    b.Property<int>("KachaHMR")
                        .HasColumnType("int");

                    b.Property<int>("KachaHall")
                        .HasColumnType("int");

                    b.Property<int>("KachaResourceCenter")
                        .HasColumnType("int");

                    b.Property<int>("KachaRoom")
                        .HasColumnType("int");

                    b.Property<int>("KachaSportsRoom")
                        .HasColumnType("int");

                    b.Property<int>("KachaStaffRoom")
                        .HasColumnType("int");

                    b.Property<int>("KachaToilet")
                        .HasColumnType("int");

                    b.Property<int>("KachiBoys")
                        .HasColumnType("int");

                    b.Property<int>("KachiGirls")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MajorDiseaseCauseForAbsentism")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NineBoys")
                        .HasColumnType("int");

                    b.Property<int>("NineGirls")
                        .HasColumnType("int");

                    b.Property<int>("NoOfRoomsWithWindowsAndVantilation")
                        .HasColumnType("int");

                    b.Property<int>("NonteachingFemale")
                        .HasColumnType("int");

                    b.Property<int>("NonteachingMale")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfVisitByEducationalManager")
                        .HasColumnType("int");

                    b.Property<string>("PA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PakiBoys")
                        .HasColumnType("int");

                    b.Property<int>("PakiGirls")
                        .HasColumnType("int");

                    b.Property<int>("PakkaClerkOffice")
                        .HasColumnType("int");

                    b.Property<int>("PakkaGuardRoom")
                        .HasColumnType("int");

                    b.Property<int>("PakkaHMR")
                        .HasColumnType("int");

                    b.Property<int>("PakkaHall")
                        .HasColumnType("int");

                    b.Property<int>("PakkaResourceCenter")
                        .HasColumnType("int");

                    b.Property<int>("PakkaRoom")
                        .HasColumnType("int");

                    b.Property<int>("PakkaSportsRoom")
                        .HasColumnType("int");

                    b.Property<int>("PakkaStaffRoom")
                        .HasColumnType("int");

                    b.Property<int>("PakkaToilet")
                        .HasColumnType("int");

                    b.Property<string>("ReasonOfNonFunctional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolOwnedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SencNonTeaching")
                        .HasColumnType("int");

                    b.Property<int>("SencTeaching")
                        .HasColumnType("int");

                    b.Property<int>("SevenBoys")
                        .HasColumnType("int");

                    b.Property<int>("SevenGilrs")
                        .HasColumnType("int");

                    b.Property<string>("Shift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SixBoys")
                        .HasColumnType("int");

                    b.Property<int>("SixGirls")
                        .HasColumnType("int");

                    b.Property<string>("SourceOfWater")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubTehsil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeachingFemale")
                        .HasColumnType("int");

                    b.Property<int>("TeachingMale")
                        .HasColumnType("int");

                    b.Property<string>("Tehsil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TenBoys")
                        .HasColumnType("int");

                    b.Property<int>("TenGirls")
                        .HasColumnType("int");

                    b.Property<int>("ThreeBoys")
                        .HasColumnType("int");

                    b.Property<int>("ThreeGirls")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("TotalNonTeachingStaff")
                        .HasColumnType("int");

                    b.Property<int>("TotalSchoolProfileStudent")
                        .HasColumnType("int");

                    b.Property<int>("TotalStudentProfileEntered")
                        .HasColumnType("int");

                    b.Property<int>("TotalTeachingStaff")
                        .HasColumnType("int");

                    b.Property<int>("TwelveBoys")
                        .HasColumnType("int");

                    b.Property<int>("TwelveGilrs")
                        .HasColumnType("int");

                    b.Property<int>("TwoBoys")
                        .HasColumnType("int");

                    b.Property<int>("TwoGirls")
                        .HasColumnType("int");

                    b.Property<string>("UC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnionCouncilId")
                        .HasColumnType("int");

                    b.Property<int>("VchCreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("VillageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WardName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WardNo")
                        .HasColumnType("int");

                    b.Property<string>("YearofNonFunctinal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SchoolId");

                    b.HasIndex("UnionCouncilId");

                    b.ToTable("School", "master");
                });

            modelBuilder.Entity("ASPIRE.Models.Domain.MasterSetup.Tehsil", b =>
                {
                    b.Property<int>("TehsilId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("TehsilName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TehsilId");

                    b.HasIndex("DistrictId");

                    b.ToTable("Tehsil", "master");
                });

            modelBuilder.Entity("ASPIRE.Models.Domain.MasterSetup.UnionCouncil", b =>
                {
                    b.Property<int>("UnionCouncilId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TehsilId")
                        .HasColumnType("int");

                    b.Property<string>("UnionCouncilName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UnionCouncilId");

                    b.HasIndex("TehsilId");

                    b.ToTable("UnionCouncil", "master");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("ASPIRE.Models.Domain.MasterSetup.District", b =>
                {
                    b.HasOne("ASPIRE.Models.Domain.MasterSetup.Division", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Division");
                });

            modelBuilder.Entity("ASPIRE.Models.Domain.MasterSetup.Division", b =>
                {
                    b.HasOne("ASPIRE.Models.Domain.MasterSetup.Provience", "Provience")
                        .WithMany()
                        .HasForeignKey("ProvienceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provience");
                });

            modelBuilder.Entity("ASPIRE.Models.Domain.MasterSetup.School", b =>
                {
                    b.HasOne("ASPIRE.Models.Domain.MasterSetup.UnionCouncil", "UnionCouncil")
                        .WithMany()
                        .HasForeignKey("UnionCouncilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UnionCouncil");
                });

            modelBuilder.Entity("ASPIRE.Models.Domain.MasterSetup.Tehsil", b =>
                {
                    b.HasOne("ASPIRE.Models.Domain.MasterSetup.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");
                });

            modelBuilder.Entity("ASPIRE.Models.Domain.MasterSetup.UnionCouncil", b =>
                {
                    b.HasOne("ASPIRE.Models.Domain.MasterSetup.Tehsil", "Tehsil")
                        .WithMany()
                        .HasForeignKey("TehsilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tehsil");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ASPIRE.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ASPIRE.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASPIRE.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ASPIRE.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
